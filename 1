// Binary Tree implementation with in-order traversal
class Node {
    int value;
    Node left, right;
    
    public Node(int value) {
        this.value = value;
        this.left = this.right = null;
    }
}

class BinaryTree {
    Node root;
    
    // In-order traversal
    public void inOrderTraversal(Node node) {
        if (node == null) return;
        
        // Traverse left subtree
        inOrderTraversal(node.left);
        
        // Visit root
        System.out.print(node.value + " ");
        
        // Traverse right subtree
        inOrderTraversal(node.right);
    }
    
    // Test case
    public static void main(String[] args) {
        BinaryTree tree = new BinaryTree();
        
        // Create tree
        tree.root = new Node(1);
        tree.root.left = new Node(2);
        tree.root.right = new Node(3);
        tree.root.left.left = new Node(4);
        tree.root.left.right = new Node(5);
        
        // Print in-order traversal
        System.out.println("In-order traversal:");
        tree.inOrderTraversal(tree.root);
    }
}
